#!/usr/bin/env bash

script_dirname="$( dirname -- "${0}" )"

: ${CLEAN_TEMP:=true}

: ${__tmpdir:=""}

cleanup() {
    if "${CLEAN_TEMP}" && [ -n "${__tmpdir}" ] && [ -e "${__tmpdir}" ]
    then
        rm -vrf "${__tmpdir}"
    fi
}

test_base_okay() {
    local workdir="${tmpdir}/${FUNCNAME}"
    mkdir -vp "${workdir}"
    rsync -av base/ "${workdir}/"
    (cd "${workdir}" && docker-compose run --rm devtools)
}

test_format_failure() {
    local workdir="${tmpdir}/${FUNCNAME}"
    mkdir -vp "${workdir}"
    rsync -av base/ "${workdir}/"
    pwd
    (cd "${workdir}" && ! docker-compose run --rm devtools)
}

main() {
    set -eo pipefail
    cd "${script_dirname}"

    trap cleanup EXIT

    tmpdir="${__tmpdir}"
    if [ -z "${tmpdir}" ]
    then
        local tmpdir=$(mktemp -d)
    fi
    __tmpdir="${tmpdir}"
    mkdir -vp ${tmpdir}

    local -a tests
    tests=(
        test_base_okay
        test_format_failure
    )
    for test in "${tests[@]}"
    do
        if "${test}"
        then
            1>&2 echo "${test} passed"
        else
            1>&2 echo "${test} failed"
        fi
    done
}

main "${@}"
